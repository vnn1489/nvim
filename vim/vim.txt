" ---- FILE CONFIG
" file format for vim: .vimrc
" location for vim: /home/UaerName

" file format for neovim: init.vim
" location for neovim: /home/UserName/.config/nvim
" plugin for neovim: https://dotfyle.com/

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ---- SETUP PLUGIN
call plug#begin('/home/linux/.config/nvim/plugged')
" ---- theme
Plug 'joshdick/onedark.vim',                  " dark theme

" ---- file browser
Plug 'preservim/nerdTree'                     " file browser  
Plug 'Xuyuanp/nerdtree-git-plugin'            " git status
Plug 'ryanoasis/vim-devicons'                 " icon
Plug 'unkiwii/vim-nerdtree-sync'              " sync current file 
Plug 'jcharum/vim-nerdtree-syntax-highlight',
  \ {'branch': 'escape-keys'}

" ---- file search
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }            " fuzzy finder 
Plug 'junegunn/fzf.vim'

" ---- status bar
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" ---- terminal
Plug 'voldikss/vim-floaterm'                  " float terminal

" ---- code intellisense
Plug 'neoclide/coc.nvim', 
  \ {'branch': 'release'}                     " language server protocol (LSP) 
Plug 'jiangmiao/auto-pairs'                   " parenthesis auto
Plug 'alvan/vim-closetag'
Plug 'mattn/emmet-vim' 
Plug 'preservim/nerdcommenter'                " comment code 
" Plug 'liuchengxu/vista.vim'                 " function tag bar
Plug 'alvan/vim-closetag'                     " auto close HTML/XML tag 
  \ { 
    \ 'do': 'yarn install '
            \ .'--frozen-lockfile '
            \ .'&& yarn build',
    \ 'branch': 'main' 
  \ }

" ---- code syntax highlight
" Plug 'yuezk/vim-js'                           " avascript
" Plug 'MaxMEllon/vim-jsx-pretty'               " JSX/React
" Plug 'jackguo380/vim-lsp-cxx-highlight'       " C/C++
" Plug 'uiiaoo/java-syntax.vim'                 " Java
Plug 'sheerun/vim-polyglot'
  
" ---- debugging
Plug 'puremourning/vimspector'                  " vimspector

" ---- source code version control 
Plug 'tpope/vim-fugitive'                       " git infomation 
Plug 'tpope/vim-rhubarb' 
Plug 'airblade/vim-gitgutter'                   " git show changes 
Plug 'samoshkin/vim-mergetool'                  " git merge

" ---- fold
Plug 'tmhedberg/SimpylFold'
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ---- PURE SETUP
" ---- set compatibility to vim only
set nocompatible

" ---- automatically wrap text that extends beyond the screen length
set wrap

" ---- encoding
set encoding=utf-8

" ---- status bar
set laststatus=2

set mouse=a                                         " enable mouse
set tabstop=2
set shiftwidth=2
set expandtab
set listchars=tab:\Â¦\                               " tab charactor 
set list
set foldmethod=syntax
set foldnestmax=1
set foldlevelstart=0

set number                                          " show line number
" set nonumber                                      " hide line number

set ignorecase                                      " enable case-sensitive 

" ---- disable backup
set nobackup
set nowb
set noswapfile

" ---- optimize 
set synmaxcol=200
set lazyredraw
au! BufNewFile,BufRead *.json set foldmethod=indent " change foldmethod for specific filetype

syntax on

" ---- enable copying from vim to clipboard
if has('win32')
  set clipboard=unnamed  
else
  set clipboard=unnamedplus
endif

" ---- auto reload content changed outside
au CursorHold,CursorHoldI * checktime
au FocusGained,BufEnter * :checktime
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI *
  \ if mode() !~ '\v(c|r.?|!|t)' && getcmdwintype() == ''
    \ | checktime 
  \ | endif
autocmd FileChangedShellPost *
  \ echohl WarningMsg 
  \ | echo                                          " file changed on disk, buffer reloaded."
  \ | echohl None

" ---- key mappings

" ---- resize pane
nmap <M-Right> :vertical resize +1<CR>    
nmap <M-Left> :vertical resize -1<CR>
nmap <M-Down> :resize +1<CR>
nmap <M-Up> :resize -1<CR>

" ---- search a hightlighted text
vnoremap // y/\V<C-R>=escape(@",'/\')<CR><CR>
nmap /\ :noh<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ---- SETTING & MAPPINGS
let nvim_settings_dir = '/home/linux/.config/nvim/settings/'
execute 'source '.nvim_settings_dir.'airline.vim'
execute 'source '.nvim_settings_dir.'coc.vim'
execute 'source '.nvim_settings_dir.'floaterm.vim'
execute 'source '.nvim_settings_dir.'fzf.vim'
execute 'source '.nvim_settings_dir.'git.vim'
execute 'source '.nvim_settings_dir.'nerdcommenter.vim'
execute 'source '.nvim_settings_dir.'nerdtree.vim'
execute 'source '.nvim_settings_dir.'vimspector.vim'
execute 'source '.nvim_settings_dir.'vista.vim'